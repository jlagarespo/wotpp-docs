let ~ ""

let h1(x) "# " .. x .. '\n'
let h2(x) "## " .. x .. '\n'
let h3(x) "### " .. x .. '\n'
let h4(x) "#### " .. x .. '\n'
let h5(x) "##### " .. x .. '\n'
let h6(x) "###### " .. x .. '\n'

let p(x) x .. '\n'

let sur(x, y) x .. y .. x

let i(x) sur("*", x)
let b(x) sur("**", x)

let code(x) sur("`", x)
let codeblock(lang, x) sur("```", lang .. '\n' .. x .. '\n') .. '\n'
let sample(x) sur("```\n", x .. '\n')

let list() ~
let list(x)
        _list_prefix .. x .. '\n' .. pop list(*)

let ul() {
	let _list_prefix "* "
        pop list(*) .. '\n'
}

let ol() {
	let _list_prefix "1. "
        pop list(*) .. '\n'
}

let hr "---" .. '\n'
let br "\n\n"

let link(name, url) "[" .. name .. "](" .. url .. ")"
let img(name, url) "![" .. name .. "](" .. url .. ")" .. '\n'
let quote(x, cite) "> " .. x .. '\n'
let quote(x) quote(x, "")

#[ HTML specific stuff ]
let sub(x) "<sub>" .. x .. "</sub>"
let sup(x) "<sup>" .. x .. "</sup>"
let time(x) "<time>" .. x .. "</time>"

r#"---
layout: page
title: "# .. title .. r#"
description: "# .. description .. r#"
---
"#

let footer ""
h1(title)

