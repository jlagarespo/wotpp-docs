let title "The wot++ documentation"
let description "Homepage of the wot++ documentation system."
use "backend.wpp"

p(block(p#"Welcome to the home of the wot++ documentation! This needs a lot of writing,
which, since I'm writing this for testing purposes, I can't be bothered to do."#))

h1("level 1 header")
h2("level 2 header")
h3("level 3 header")
h4("level 4 header")
h5("level 5 header")
h6("level 6 header")

h3("Example red heading", "style", "color: red")

i("some italic text") " " b("and some bold one") br
sup("superscript") " and " sub("subscript") br
time("Time: " .. run "date") br
code("this is some code") br
codeblock("wpp", c#"
#[ More code. ]
let a() {
	let a() {
		let a() "c"
		"b"
	}
	"a"
}
a()a()a()
"#)

"Output:" br
sample("abc")

codeblock("cpp", c#"
// Time for some C++
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

constexpr void print_all(auto&& first) {
	std::cout << first << std::endl;
}

constexpr void print_all(auto&& first, auto&&... rest) {
	std::cout << first << ", ";
	print_all(rest...);
}

constexpr std::ostream& operator<<(std::ostream& out, const std::vector<std::string>& x) {
	auto it = x.begin();
	for (; it != x.end()-1; it++)
		std::cout << *it << ", ";

	std::cout << *it;
	return out;
}

int main(int argc, char *argv[]) {
	std::vector<std::string> args(argc);
	std::generate(args.begin(), args.end(), [&argv, n = 0]() mutable {
		return argv[n++];
	});

	std::cout << args << std::endl;
	print_all("hello", "world", "this", "is", "a", "test");

	return 0;
}
"#)

p(p#"Example list:"#)

ol("hi there", "test", "hello there", "hello world", "general kenobi")
ul("hi there", "test", "hello there", "hello world", "general kenobi")

link("this is a test link", ".")
quote(r#"wot++ is a lifestyle"#) br
" - Sun Tzu, The Art of War"

br

footer

